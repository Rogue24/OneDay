// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ClockHandRotationKit
import Foundation
import Swift
import SwiftUI
import WidgetKit
import _Concurrency
public enum ClockHandRotationPeriod : Swift.Hashable, Swift.Equatable {
  case custom(Foundation.TimeInterval)
  case secondHand
  case minuteHand
  case hourHand
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: ClockHandRotationKit.ClockHandRotationPeriod, b: ClockHandRotationKit.ClockHandRotationPeriod) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public struct ClockHandRotationModifier : SwiftUI.ViewModifier {
  public init(period: ClockHandRotationKit.ClockHandRotationPeriod, timeZone: Foundation.TimeZone = .current, anchor: SwiftUI.UnitPoint = .center)
  @_Concurrency.MainActor(unsafe) public func body(content: ClockHandRotationKit.ClockHandRotationModifier.Content) -> some SwiftUI.View
  
  public typealias Body = @_opaqueReturnTypeOf("$s20ClockHandRotationKit0abC8ModifierV4body7contentQr7SwiftUI05_ViewE8_ContentVyACG_tF", 0) __
}
extension SwiftUI.View {
  public func clockHandRotationEffect(period: ClockHandRotationKit.ClockHandRotationPeriod, in timeZone: Foundation.TimeZone = .current, anchor: SwiftUI.UnitPoint = .center) -> some SwiftUI.View
  
}
